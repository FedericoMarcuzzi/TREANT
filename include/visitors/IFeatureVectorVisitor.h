//
// Created by dg on 18/11/19.
//

#ifndef TREEANT_IFEATUREVECTORVISITOR_H
#define TREEANT_IFEATUREVECTORVISITOR_H

#include "types.h"
#include <tuple>

// Forward declarations
class INode;
class IFeatureVector;

class BoolFeatureVector;
class IntFeatureVector;
class DoubleFeatureVector;

// TODO: this is an ImpuirityVisitor, GiniVisitor could be a child
class IFeatureVectorVisitor {

public:
  virtual ~IFeatureVectorVisitor() = default;

  /**
   * Evaluate a generic vector of features.
   * @return a tuple containing the impurity factor, the possible node that
   * split the dataset and the partitions generated by the node
   */
  virtual void visit(const BoolFeatureVector *featureVector,
                     const indexes_t &validIndexes) const = 0;

  virtual void visit(const IntFeatureVector *featureVector,
                     const indexes_t &validIndexes) const = 0;

  virtual void visit(const DoubleFeatureVector *featureVector,
                     const indexes_t &validIndexes) const = 0;
};

#endif // TREEANT_IFEATUREVECTORVISITOR_H
